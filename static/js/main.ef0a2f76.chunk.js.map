{"version":3,"sources":["bll/todo-reducer.ts","bll/redux-store.ts","bll/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["slice","createSlice","name","initialState","boards","id","title","items","currentBoard","currentItem","reducers","setBoardsAC","state","action","console","log","dir","i","length","setCurrentBoardAC","payload","board","setCurrentItemAC","item","pushCurrentItemAC","map","push","deleteItemsFromCurrentBoardAC","splice","currentIndex","setItemsInCurrentBoardAC","b","dropIndex","todoReducer","reducer","actions","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","useActions","dispatch","useDispatch","useMemo","bindActionCreators","boardsActions","App","useSelector","dragOverHandler","e","preventDefault","target","className","style","boxShadow","onDragOver","onDrop","indexOf","dropCardHandler","onDragLeave","dragLeaveHandler","onDragStart","dragStartHandler","onDragEnd","dragEndHandler","dropHandler","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAoBaA,EAAQC,YAAY,CAC7BC,KAAM,SACNC,aApBiB,CACjBC,OAAQ,CACJ,CAACC,GAAI,EAAGC,MAAO,QAASC,MAAO,CAAC,CAACF,GAAI,EAAGC,MAAO,UAAU,CAACD,GAAI,EAAGC,MAAO,SAAS,CAACD,GAAI,EAAGC,MAAO,UAChG,CAACD,GAAI,EAAGC,MAAO,UAAWC,MAAO,CAAC,CAACF,GAAI,EAAGC,MAAO,UAAU,CAACD,GAAI,EAAGC,MAAO,YAE9EE,aAAc,CACVH,GAAI,EAAGC,MAAO,QAASC,MAAO,CAAC,CAACF,GAAI,EAAGC,MAAO,YAElDG,YAAa,IAabC,SAAS,CACLC,YADK,SACQC,EAAMC,GACfC,QAAQC,IAAI,aACZD,QAAQE,IAAIJ,EAAMJ,cASlB,IAAK,IAAIS,EAAE,EAAGA,EAAEL,EAAMR,OAAOc,OAAQD,IAC9BL,EAAMR,OAAOa,GAAGZ,KAAOO,EAAMJ,aAAaH,GAAIO,EAAMR,OAAOa,GAAGL,EAAMJ,aAClEI,EAAMR,OAAOa,GAAKL,EAAMR,OAAOa,GAGxCH,QAAQC,IAAI,cAAeH,IAE/BO,kBAnBK,SAmBcP,EAAOC,GACtBC,QAAQC,IAAIF,EAAOO,QAAQC,OAC3BT,EAAMJ,aAAeK,EAAOO,QAAQC,OAGxCC,iBAxBK,SAwBaV,EAAOC,GACrBD,EAAMH,YAAcI,EAAOO,QAAQG,MAEvCC,kBA3BK,SA2BcZ,EAAOC,GACtBD,EAAMR,OAAOqB,KAAI,SAAAJ,GACb,GAAGA,EAAMhB,KAAKQ,EAAOO,QAAQC,MAAMhB,GAC9B,OAAOgB,EAD2BA,EAAMd,MAAMmB,KAAKb,EAAOO,QAAQX,iBAY/EkB,8BAzCK,SAyC0Bf,EAAOC,GAClCC,QAAQC,IAAI,eACZH,EAAMJ,aAAaD,MAAMqB,OAAOf,EAAOO,QAAQS,aAAa,IAEhEC,yBA7CK,SA6CqBlB,EAAOC,GAC7BC,QAAQC,IAAI,YACZH,EAAMR,OAAOqB,KAAI,SAAAM,GACb,OAAGA,EAAE1B,KAAKQ,EAAOO,QAAQC,MAAMhB,GACpB0B,EAAExB,MAAMqB,OAAOf,EAAOO,QAAQY,UAAU,EAAE,EAAGnB,EAAOO,QAAQX,aAE5DsB,SAQdE,EAAcjC,EAAMkC,Q,EAC0GlC,EAAMmC,Q,KAAnIxB,Y,EAAaQ,kB,EAAmBG,iB,EAAiBE,kB,EAAkBG,8B,EAA8BG,yB,MC3EzGM,EAAcC,YAAgB,CAChCjC,OAAQ6B,IAGCK,EAAQC,YAAe,CAChCL,QAASE,EACTI,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,QAAQC,MACnEC,SAAWC,OAAeC,8BAAiCD,OAAeC,iCAa9ED,OAAOP,MAAQA,EAIR,SAASS,EAAmDZ,GAC/D,IAAMa,EAFyBC,cAO/B,OAHqBC,mBAAQ,WACzB,OAAOC,YAAmBhB,EAAQa,KACnC,I,YCnCDI,EAAa,eACZpD,EAAMmC,S,OC0FEkB,MArFf,WAAgB,IAAD,EAUPN,EAAWK,GANXzC,EAJO,EAIPA,YACAQ,EALO,EAKPA,kBACAG,EANO,EAMPA,iBACAE,EAPO,EAOPA,kBACAG,EARO,EAQPA,8BACAG,EATO,EASPA,yBAEE1B,EAASkD,aAA0C,SAAA1C,GAAK,OAAIA,EAAMR,OAAOA,UACzEI,EAAe8C,aAAqC,SAAA1C,GAAK,OAAIA,EAAMR,OAAOI,gBAC1EC,EAAc6C,aAAoC,SAAA1C,GAAK,OAAIA,EAAMR,OAAOK,eAE9E,SAAS8C,EAAgBC,GAErBA,EAAEC,iBACyB,SAAvBD,EAAEE,OAAOC,YACTH,EAAEE,OAAOE,MAAMC,UAAY,kBAwCnC,OACI,qBAAKF,UAAU,MAAf,SACKvD,EAAOqB,KAAI,SAAAJ,GAAK,OACb,sBACIsC,UAAU,QACVG,WAAY,SAACN,GAAD,OAAYD,EAAgBC,IACxCO,OAAQ,SAACP,GAAD,OAbxB,SAAyBA,EAAQnC,GAC7BG,EAAkB,CAACH,QAAOZ,gBAC1B,IAAMoB,EAAerB,EAAaD,MAAMyD,QAAQvD,GAChDkB,EAA8B,CAACE,iBAC/BlB,EAAY,CAACU,QAAOQ,iBASYoC,CAAgBT,EAAGnC,IAH3C,UAKI,qBAAKsC,UAAU,eAAf,SAA+BtC,EAAMf,QACpCe,EAAMd,MAAMkB,KAAI,SAAAF,GAAI,OACjB,qBACIuC,WAAY,SAACN,GAAD,OAAYD,EAAgBC,IACxCU,YAAa,SAACV,GAAD,OAhDrC,SAA0BA,GAGtBA,EAAEE,OAAOE,MAAMC,UAAY,OA6CkBM,CAAiBX,IAC1CY,YAAa,SAACZ,GAAD,OA3CrC,SAA0BA,EAAQnC,EAAYE,GAE1CJ,EAAkB,CAACE,UACnBC,EAAiB,CAACC,SAwC2B8C,CAAiBb,EAAGnC,EAAOE,IACpD+C,UAAW,SAACd,GAAD,OAtCnC,SAAwBA,GACpBA,EAAEE,OAAOE,MAAMC,UAAY,OAqCgBU,CAAef,IACtCO,OAAQ,SAACP,GAAD,OAnChC,SAAqBA,EAAQnC,EAAYE,GAErCiC,EAAEC,iBACF,IAAM5B,EAAerB,EAAaD,MAAMyD,QAAQvD,GAChDkB,EAA8B,CAACE,iBAE/B,IAAMG,EAAYX,EAAMd,MAAMyD,QAAQzC,GACtCO,EAAyB,CAACT,QAAOZ,cAAauB,cAE9CrB,EAAY,CAACU,QAAOQ,iBA0BoB2C,CAAYhB,EAAGnC,EAAOE,IAC1CkD,WAAW,EACXd,UAAU,OAPd,SAQEpC,EAAKjB,oBCvEhBoE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU/C,MAAOA,EAAjB,SACF,cAAC,EAAD,QAGFgD,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef0a2f76.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    boards: [\r\n        {id: 1, title: 'Users', items: [{id: 1, title: 'Viktor'},{id: 2, title: 'Anton'},{id: 3, title: 'Dima'}]},\r\n        {id: 2, title: 'Mentors', items: [{id: 4, title: 'Dimych'},{id: 5, title: 'Ignat'}]}\r\n    ],\r\n    currentBoard: {\r\n        id: 1, title: 'Users', items: [{id: 1, title: 'Viktor'}]\r\n    },\r\n    currentItem: {} as Item\r\n}\r\nexport type BoardsType = Array<Board>\r\nexport type Board = {\r\n    id:number,\r\n    title: string,\r\n    items: Array<Item>\r\n}\r\nexport type Item  ={id:number, title: string}\r\n\r\nexport const slice = createSlice({\r\n    name: 'boards',\r\n    initialState: initialState,\r\n    reducers:{\r\n        setBoardsAC (state,action: PayloadAction<{board:Board, currentIndex:number}>){\r\n            console.log('set board')\r\n            console.dir(state.currentBoard)\r\n            // state.boards.map(b=>{\r\n            //     if(b.id === state.currentBoard.id){\r\n            //         return state.currentBoard\r\n            //     } else{\r\n            //         return b\r\n            //     }\r\n            //\r\n            // })\r\n            for (let i=0; i<state.boards.length; i++){\r\n                if(state.boards[i].id === state.currentBoard.id) state.boards[i]=state.currentBoard\r\n                else state.boards[i] = state.boards[i]\r\n            }\r\n\r\n            console.log('state board', state)\r\n        },\r\n        setCurrentBoardAC (state, action: PayloadAction<{board:Board}>){\r\n            console.log(action.payload.board)\r\n            state.currentBoard = action.payload.board\r\n\r\n        },\r\n        setCurrentItemAC (state, action: PayloadAction<{item: Item}>){\r\n            state.currentItem = action.payload.item\r\n        },\r\n        pushCurrentItemAC (state, action: PayloadAction<{board:Board,currentItem:Item}>){\r\n            state.boards.map(board=>{\r\n                if(board.id===action.payload.board.id) board.items.push(action.payload.currentItem)\r\n                else return board\r\n            })\r\n\r\n\r\n            // let board = state.boards.find(b=>b.id===action.payload.board.id)\r\n            // if (board){\r\n            //     board.items.push(action.payload.currentItem)\r\n            // }\r\n\r\n\r\n        },\r\n        deleteItemsFromCurrentBoardAC (state, action: PayloadAction<{currentIndex:number}>){\r\n            console.log('delete item')\r\n            state.currentBoard.items.splice(action.payload.currentIndex,1)\r\n        },\r\n        setItemsInCurrentBoardAC (state, action: PayloadAction<{board:Board,currentItem:Item,dropIndex:number}>){\r\n            console.log('set item')\r\n            state.boards.map(b=>{\r\n                if(b.id===action.payload.board.id) {\r\n                    return b.items.splice(action.payload.dropIndex+1,0, action.payload.currentItem)\r\n                } else{\r\n                    return b\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const todoReducer = slice.reducer;\r\nexport const {setBoardsAC, setCurrentBoardAC, setCurrentItemAC,pushCurrentItemAC,deleteItemsFromCurrentBoardAC,setItemsInCurrentBoardAC} = slice.actions;","import {combineReducers, compose} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {todoReducer} from \"./todo-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ActionCreatorsMapObject, bindActionCreators} from \"redux\";\r\nimport {useMemo} from \"react\";\r\n\r\nconst rootReducer = combineReducers({\r\n    boards: todoReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware),\r\n    devTools: (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n})\r\n\r\n\r\n// const store = createStore(\r\n//     reducer, /* preloadedState, */\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\ntype AppDispatchType = typeof store.dispatch\r\nexport const useAppDispatch = ()=> useDispatch<AppDispatchType>()\r\nexport function useActions<T extends ActionCreatorsMapObject<any>>(actions:T){\r\n    const dispatch = useAppDispatch()\r\n\r\n    const boundActions = useMemo(()=>{\r\n        return bindActionCreators(actions,dispatch)\r\n    }, [])\r\n    return boundActions\r\n}","import {slice} from './todo-reducer'\r\n\r\nconst boardsActions = {\r\n    ...slice.actions\r\n}\r\nexport {boardsActions}","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {AppRootStateType, store, useActions} from \"./bll/redux-store\";\nimport {boardsActions} from \"./bll\";\nimport {useSelector} from \"react-redux\";\nimport {Board, BoardsType, Item} from \"./bll/todo-reducer\";\n\nfunction App() {\n\n\n    const {\n        setBoardsAC,\n        setCurrentBoardAC,\n        setCurrentItemAC,\n        pushCurrentItemAC,\n        deleteItemsFromCurrentBoardAC,\n        setItemsInCurrentBoardAC\n    } = useActions(boardsActions)\n    const boards = useSelector<AppRootStateType, BoardsType>(state => state.boards.boards)\n    const currentBoard = useSelector<AppRootStateType, Board>(state => state.boards.currentBoard)\n    const currentItem = useSelector<AppRootStateType, Item>(state => state.boards.currentItem)\n\n    function dragOverHandler(e: any) {\n\n        e.preventDefault()\n        if (e.target.className === 'item') {\n            e.target.style.boxShadow = '0 2px 3px gray'\n        }\n    }\n\n    function dragLeaveHandler(e: any) {\n\n\n        e.target.style.boxShadow = 'none'\n    }\n\n    function dragStartHandler(e: any, board: any, item: any) {\n\n        setCurrentBoardAC({board})\n        setCurrentItemAC({item})\n    }\n\n    function dragEndHandler(e: any) {\n        e.target.style.boxShadow = 'none'\n    }\n\n    function dropHandler(e: any, board: any, item: any) {\n\n        e.preventDefault()\n        const currentIndex = currentBoard.items.indexOf(currentItem)\n        deleteItemsFromCurrentBoardAC({currentIndex})\n\n        const dropIndex = board.items.indexOf(item)\n        setItemsInCurrentBoardAC({board, currentItem, dropIndex})\n\n        setBoardsAC({board, currentIndex})\n\n    }\n\n    function dropCardHandler(e: any, board: any) {\n        pushCurrentItemAC({board, currentItem})\n        const currentIndex = currentBoard.items.indexOf(currentItem)\n        deleteItemsFromCurrentBoardAC({currentIndex})\n        setBoardsAC({board, currentIndex})\n    }\n\n    return (\n        <div className=\"app\">\n            {boards.map(board =>\n                <div\n                    className=\"board\"\n                    onDragOver={(e: any) => dragOverHandler(e)}\n                    onDrop={(e: any) => dropCardHandler(e, board)}\n                >\n                    <div className=\"board__title\">{board.title}</div>\n                    {board.items.map(item =>\n                        <div\n                            onDragOver={(e: any) => dragOverHandler(e)}\n                            onDragLeave={(e: any) => dragLeaveHandler(e)}\n                            onDragStart={(e: any) => dragStartHandler(e, board, item)}\n                            onDragEnd={(e: any) => dragEndHandler(e)}\n                            onDrop={(e: any) => dropHandler(e, board, item)}\n                            draggable={true}\n                            className=\"item\"\n                        >{item.title}</div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}